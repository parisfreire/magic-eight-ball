define(['dart_sdk', 'packages/package_config/src/util'], function(dart_sdk, util) {
  'use strict';
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const src__util = util.src__util;
  const _root = Object.create(null);
  const packages_file = Object.create(_root);
  const $length = dartx.length;
  const $_get = dartx._get;
  const $endsWith = dartx.endsWith;
  const $containsKey = dartx.containsKey;
  const $_set = dartx._set;
  const $split = dartx.split;
  const $isEmpty = dartx.isEmpty;
  const $last = dartx.last;
  const $removeLast = dartx.removeLast;
  const $forEach = dartx.forEach;
  const $toLowerCase = dartx.toLowerCase;
  const $toList = dartx.toList;
  const $isNotEmpty = dartx.isNotEmpty;
  const $join = dartx.join;
  const $skip = dartx.skip;
  const $times = dartx['*'];
  let IdentityMapOfString$Uri = () => (IdentityMapOfString$Uri = dart.constFn(_js_helper.IdentityMap$(core.String, core.Uri)))();
  let StringAndUriToNull = () => (StringAndUriToNull = dart.constFn(dart.fnType(core.Null, [core.String, core.Uri])))();
  let ListOfString = () => (ListOfString = dart.constFn(core.List$(core.String)))();
  packages_file.parse = function(source, baseLocation) {
    let index = 0;
    let result = new (IdentityMapOfString$Uri()).new();
    while (index < dart.notNull(source[$length])) {
      let isComment = false;
      let start = index;
      let separatorIndex = -1;
      let end = source[$length];
      let char = source[$_get](index++);
      if (char === 13 || char === 10) {
        continue;
      }
      if (char === 58) {
        dart.throw(new core.FormatException.new("Missing package name", source, index - 1));
      }
      isComment = char === 35;
      while (index < dart.notNull(source[$length])) {
        char = source[$_get](index++);
        if (char === 58 && separatorIndex < 0) {
          separatorIndex = index - 1;
        } else if (char === 13 || char === 10) {
          end = index - 1;
          break;
        }
      }
      if (isComment) continue;
      if (separatorIndex < 0) {
        dart.throw(new core.FormatException.new("No ':' on line", source, index - 1));
      }
      let packageName = core.String.fromCharCodes(source, start, separatorIndex);
      if (!dart.test(src__util.isValidPackageName(packageName))) {
        dart.throw(new core.FormatException.new("Not a valid package name", packageName, 0));
      }
      let packageUri = core.String.fromCharCodes(source, separatorIndex + 1, end);
      let packageLocation = core.Uri.parse(packageUri);
      packageLocation = baseLocation.resolveUri(packageLocation);
      if (!packageLocation.path[$endsWith]("/")) {
        packageLocation = packageLocation.replace({path: dart.notNull(packageLocation.path) + "/"});
      }
      if (dart.test(result[$containsKey](packageName))) {
        dart.throw(new core.FormatException.new("Same package name occured twice.", source, start));
      }
      result[$_set](packageName, packageLocation);
    }
    return result;
  };
  packages_file.write = function(output, packageMapping, opts) {
    let baseUri = opts && 'baseUri' in opts ? opts.baseUri : null;
    let comment = opts && 'comment' in opts ? opts.comment : null;
    if (baseUri != null && !dart.test(baseUri.isAbsolute)) {
      dart.throw(new core.ArgumentError.value(baseUri, "baseUri", "Must be absolute"));
    }
    if (comment != null) {
      let lines = comment[$split]("\n");
      if (lines[$last][$isEmpty]) lines[$removeLast]();
      for (let commentLine of lines) {
        output.write("# ");
        output.writeln(commentLine);
      }
    } else {
      output.write("# generated by package:package_config at ");
      output.write(new core.DateTime.now());
      output.writeln();
    }
    packageMapping[$forEach](dart.fn((packageName, uri) => {
      if (!dart.test(src__util.isValidPackageName(packageName))) {
        dart.throw(new core.ArgumentError.new("\"" + dart.str(packageName) + "\" is not a valid package name"));
      }
      if (uri.scheme === "package") {
        dart.throw(new core.ArgumentError.value("Package location must not be a package: URI", dart.toString(uri)));
      }
      output.write(packageName);
      output.write(":");
      if (baseUri != null) {
        uri = packages_file._relativize(uri, baseUri);
      }
      output.write(uri);
      if (!uri.path[$endsWith]("/")) {
        output.write("/");
      }
      output.writeln();
    }, StringAndUriToNull()));
  };
  packages_file._relativize = function(uri, baseUri) {
    if (!dart.test(baseUri.isAbsolute)) dart.assertFailed();
    if (dart.test(uri.hasQuery) || dart.test(uri.hasFragment)) {
      uri = core.Uri.new({scheme: uri.scheme, userInfo: dart.test(uri.hasAuthority) ? uri.userInfo : null, host: dart.test(uri.hasAuthority) ? uri.host : null, port: dart.test(uri.hasAuthority) ? uri.port : null, path: uri.path});
    }
    if (!dart.test(uri.isAbsolute)) return uri;
    if (baseUri.scheme != uri.scheme) {
      return uri;
    }
    if (uri.hasAuthority != baseUri.hasAuthority) return uri;
    if (dart.test(uri.hasAuthority)) {
      if (uri.userInfo != baseUri.userInfo || uri.host[$toLowerCase]() !== baseUri.host[$toLowerCase]() || uri.port != baseUri.port) {
        return uri;
      }
    }
    baseUri = baseUri.normalizePath();
    let base = baseUri.pathSegments[$toList]();
    if (dart.test(base[$isNotEmpty])) {
      base = ListOfString().from(base);
      base[$removeLast]();
    }
    uri = uri.normalizePath();
    let target = uri.pathSegments[$toList]();
    if (dart.test(target[$isNotEmpty]) && target[$last][$isEmpty]) target[$removeLast]();
    let index = 0;
    while (index < dart.notNull(base[$length]) && index < dart.notNull(target[$length])) {
      if (base[$_get](index) != target[$_get](index)) {
        break;
      }
      index++;
    }
    if (index === base[$length]) {
      if (index === target[$length]) {
        return core.Uri.new({path: "./"});
      }
      return core.Uri.new({path: target[$skip](index)[$join]("/")});
    } else if (index > 0) {
      return core.Uri.new({path: "../"[$times](dart.notNull(base[$length]) - index) + dart.notNull(target[$skip](index)[$join]("/"))});
    } else {
      return uri;
    }
  };
  dart.trackLibraries("packages/package_config/packages_file.ddc", {
    "package:package_config/packages_file.dart": packages_file
  }, '{"version":3,"sourceRoot":"","sources":["packages_file.dart"],"names":[],"mappings":"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","file":"packages_file.ddc.js"}');
  // Exports:
  return {
    packages_file: packages_file
  };
});

//# sourceMappingURL=packages_file.ddc.js.map
